[{"content":" 1 2 3 4 5 #include\u0026lt;iostream\u0026gt; using namesapce std; int main(){ int a } Welcome to Hugo theme Stack. This is your first post. Edit or delete it, then start writing!\nFor more information about this theme, check the documentation: https://stack.jimmycai.com/\nWant a site like this? Check out hugo-theme-stack-stater\nPhoto by Pawel Czerwinski on Unsplash\n","date":"2025-03-28T00:00:00Z","permalink":"http://localhost:1313/realBlog/post/%E4%BD%A0%E5%A5%BD%E4%B8%96%E7%95%8C/","title":"你好 世界"},{"content":"Welcome to Hugo theme Stack. This is your first post. Edit or delete it, then start writing!\nFor more information about this theme, check the documentation: https://stack.jimmycai.com/\nWant a site like this? Check out hugo-theme-stack-stater\nPhoto by Pawel Czerwinski on Unsplash\n","date":"2022-03-06T00:00:00Z","image":"http://localhost:1313/realBlog/post/hello-world/cover_hu6307248181568134095.jpg","permalink":"http://localhost:1313/realBlog/post/hello-world/","title":"Hello World"},{"content":"","date":"2025-05-01T18:41:23+08:00","image":"http://localhost:1313/realBlog/16.jpg","permalink":"http://localhost:1313/realBlog/post/%E5%A4%A7%E5%90%8C/","title":"大同"},{"content":" 问题的提出 📌 观察我们这学期课上的几个专题所遇到的问题： 这些问题可以统一归结为：对图像的色彩进行分析和处理。 对这一问题，我们可以进行一点点简单的学习。\n图像的基础知识 ✨ 用计算机打开一张图片，观察这张图片的属性。 容易发现，图片是由$m*n$个像素点组成。也就是说，我们只需要对像素点研究就可以了。 一个彩色像素点有R,G,B三个分量，取值都在0-255之间。RGB分别表示红绿蓝三种颜色的含量。 基于此，我们可以考虑通过修改图像的像素点来获得一些图像的效果。\n一个简单的实验 🐾 看一看这张星空 我们可以尝试对这张图片进行一点点修改。 请看下面的代码\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 from PIL import Image color_image = Image.open(\u0026#34;example.jpg\u0026#34;) #上传要处理的图片 width, height = color_image.size #获取原始图像的宽度和高度 Highlight_image = Image.new(\u0026#34;RGB\u0026#34;, (width, height)) #新建彩色图片 color_pixels = color_image.load() #获取原始图片的像素点 Highlight_pixels = Highlight_image.load() #遍历每一个像素点 for x in range(width): for y in range(height): r, g, b = color_image.getpixel((x, y)) Highlight_image.putpixel((x,y),(r*2,g*2,b*2))# 重写像素点 Highlight_image.save(\u0026#34;Highlight_example.jpg\u0026#34;) #保存图片 print(\u0026#34;高亮度图像已保存为 Highlight_example.jpg\u0026#34;) 基于这样的思路，我们尝试实现一点其他的效果。例如，对图片进行分块，可以近似实现马赛克和灰度化的效果。如下。 代码分别如下\n1 2 3 4 5 6 7 8 9 10 11 12 13 from PIL import Image color_image = Image.open(\u0026#34;example.jpg\u0026#34;) width, height = color_image.size gray_image = Image.new(\u0026#34;L\u0026#34;, (width, height)) color_pixels = color_image.load() gray_pixels = gray_image.load() for x in range(width): for y in range(height): r, g, b = color_image.getpixel((x, y)) gray = int(0.299*r + 0.587*g + 0.114*b) gray_image.putpixel((x,y),(gray)) gray_image.save(\u0026#34;gray_example.jpg\u0026#34;) print(\u0026#34;灰度图像已保存为 gray_example.jpg\u0026#34;) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 from PIL import Image # 打开彩色图像文件 color_image = Image.open(\u0026#34;example.jpg\u0026#34;) # 获取图像的宽度和高度 width, height = color_image.size # 定义马赛克块的大小 block_size = 100 # 创建一个新的图像用于保存马赛克效果 mosaic_image = Image.new(\u0026#34;RGB\u0026#34;, (width, height)) # 获取彩色图像的像素数据 color_pixels = color_image.load() # 获取马赛克图像的像素数据 mosaic_pixels = mosaic_image.load() # 遍历图像并应用马赛克效果 for x in range(0, width, block_size): for y in range(0, height, block_size): # 计算当前块的平均颜色 r_total, g_total, b_total = 0, 0, 0 count = 0 for i in range(x, min(x + block_size, width)): for j in range(y, min(y + block_size, height)): r, g, b = color_image.getpixel((i, j)) r_total += r g_total += g b_total += b count += 1 # 计算平均值 r_avg = r_total // count g_avg = g_total // count b_avg = b_total // count # 将当前块的所有像素设置为平均颜色 for i in range(x, min(x + block_size, width)): for j in range(y, min(y + block_size, height)): mosaic_pixels[i, j] = (r_avg, g_avg, b_avg) # 保存马赛克图像 mosaic_image.save(\u0026#34;mosaic_example.jpg\u0026#34;) print(\u0026#34;马赛克图像已保存为 mosaic_example.jpg\u0026#34;) 尝试解决一些问题 🤗 对于一些医学影像，有时候图像对比度不高，我们不能很好地进行描边，容易出现错误。如果我们能够先对图像进行高对比度的处理，效果会好一些吗？\n看看例子： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 from PIL import Image import numpy as np # 加载灰度图像 gray_image = Image.open(\u0026#34;gray_example.jpg\u0026#34;).convert(\u0026#34;L\u0026#34;) gray_pixels = np.array(gray_image) # 直方图均衡化 hist, bins = np.histogram(gray_pixels.flatten(), 256, [0, 256]) cdf = hist.cumsum() # 累积分布函数 cdf_normalized = cdf * 255 / cdf[-1] # 归一化 # 使用均衡化的 CDF 映射像素值 equalized_pixels = np.interp(gray_pixels.flatten(), bins[:-1], cdf_normalized) equalized_image = Image.fromarray(equalized_pixels.reshape(gray_pixels.shape).astype(np.uint8)) # 保存增强后的图像 equalized_image.save(\u0026#34;contrast_enhanced_example.jpg\u0026#34;) print(\u0026#34;对比度增强后的图像已保存为 contrast_enhanced_example.jpg\u0026#34;) 我对MCU数据集和CHN数据集的所有图片都做了提高对比度的处理(貌似MCU的数据集已经做了相关处理？)。现在还没有对模型进行重新训练。不知道会不会有性能的提高？\n关于直方图均衡化的数学原理，请参见维基百科\n","date":"2025-04-14T19:02:25+08:00","image":"http://localhost:1313/realBlog/post/%E5%9B%BE%E5%83%8F%E5%89%8D%E6%B2%BF%E7%BB%93%E8%AF%BE%E4%BD%9C%E4%B8%9A/5_hu4928680690667294365.jpg","permalink":"http://localhost:1313/realBlog/post/%E5%9B%BE%E5%83%8F%E5%89%8D%E6%B2%BF%E7%BB%93%E8%AF%BE%E4%BD%9C%E4%B8%9A/","title":"图像前沿结课作业"},{"content":"\n1.基本信号的绘制与观察 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 % 第1章：基本信号表示与绘图 clc; clear; close all; % 1. 设置离散时间轴 n = -20:20; %% 2. 单位冲激信号 delta[n] delta = double(n == 0); subplot(2,2,1); stem(n, delta, \u0026#39;filled\u0026#39;); title(\u0026#39;单位冲激 \\delta[n]\u0026#39;); xlabel(\u0026#39;n\u0026#39;); ylabel(\u0026#39;幅度\u0026#39;); grid on; %% 3. 单位阶跃信号 u[n] u = double(n \u0026gt;= 0); subplot(2,2,2); stem(n, u, \u0026#39;filled\u0026#39;); title(\u0026#39;单位阶跃 u[n]\u0026#39;); xlabel(\u0026#39;n\u0026#39;); ylabel(\u0026#39;幅度\u0026#39;); grid on; %% 4. 正弦信号 x[n] = sin(0.2πn) x = sin(0.2*pi*n); subplot(2,2,3); stem(n, x, \u0026#39;filled\u0026#39;); title(\u0026#39;正弦信号 sin(0.2πn)\u0026#39;); xlabel(\u0026#39;n\u0026#39;); ylabel(\u0026#39;幅度\u0026#39;); grid on; %% 5. 门函数（宽度为10） T0 = 10; rect = double(abs(n) \u0026lt;= T0/2); subplot(2,2,4); stem(n, rect, \u0026#39;filled\u0026#39;); title(\u0026#39;门函数 rect[n]\u0026#39;); xlabel(\u0026#39;n\u0026#39;); ylabel(\u0026#39;幅度\u0026#39;); grid on; ","date":"2025-04-14T16:04:11+08:00","image":"http://localhost:1313/realBlog/post/aaa/cover_hu11720262896201383373.jpg","permalink":"http://localhost:1313/realBlog/post/aaa/","title":"aaa"},{"content":"这是一篇崭新的博客 哈哈哈 ","date":"2025-04-14T11:58:29+08:00","permalink":"http://localhost:1313/realBlog/post/0414/","title":"0414"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rDiff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] One line code block 1 \u0026lt;p\u0026gt;A paragraph\u0026lt;/p\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2023-09-07T00:00:00Z","permalink":"http://localhost:1313/realBlog/post/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rDiff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] One line code block 1 \u0026lt;p\u0026gt;A paragraph\u0026lt;/p\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2023-09-07T00:00:00Z","permalink":"http://localhost:1313/realBlog/post/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Hugo theme Stack supports the creation of interactive image galleries using Markdown. It\u0026rsquo;s powered by PhotoSwipe and its syntax was inspired by Typlog.\nTo use this feature, the image must be in the same directory as the Markdown file, as it uses Hugo\u0026rsquo;s page bundle feature to read the dimensions of the image. External images are not supported.\nSyntax 1 ![Image 1](1.jpg) ![Image 2](2.jpg) Result Photo by mymind and Luke Chesser on Unsplash\n","date":"2023-08-26T00:00:00Z","image":"http://localhost:1313/realBlog/post/a777/2_hu15576070775610481867.jpg","permalink":"http://localhost:1313/realBlog/post/a777/","title":"a777"},{"content":"Hugo theme Stack supports the creation of interactive image galleries using Markdown. It\u0026rsquo;s powered by PhotoSwipe and its syntax was inspired by Typlog.\nTo use this feature, the image must be in the same directory as the Markdown file, as it uses Hugo\u0026rsquo;s page bundle feature to read the dimensions of the image. External images are not supported.\nSyntax 1 ![Image 1](1.jpg) ![Image 2](2.jpg) Result Photo by mymind and Luke Chesser on Unsplash\n","date":"2023-08-26T00:00:00Z","image":"http://localhost:1313/realBlog/post/image-gallery/2_hu15576070775610481867.jpg","permalink":"http://localhost:1313/realBlog/post/image-gallery/","title":"Image gallery"},{"content":"Stack has built-in support for math typesetting using KaTeX.\nIt\u0026rsquo;s not enabled by default side-wide, but you can enable it for individual posts by adding math: true to the front matter. Or you can enable it side-wide by adding math = true to the params.article section in config.toml.\nInline math This is an inline mathematical expression: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\n1 $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$ Block math $$\r\\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ 1 2 3 $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ $$\rf(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi\r$$ 1 2 3 $$ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi $$ ","date":"2023-08-24T00:00:00Z","permalink":"http://localhost:1313/realBlog/post/math-typesetting/","title":"Math Typesetting"}]